/*Variables definidas por el usuario*/

 :root {
    --primario: #FFC107;
    --secundario: #0097A7;
    --oscuro: #212121;
    --gris: #757575
}


/* apply a natural box layout model to all elements, but allowing components to change */

html {
    box-sizing: border-box;
    /*El min height es para que no se vea cortado el gradient del body*/
    min-height: 100%;
    font-size: 62.5%;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    font-family: 'Krub', sans-serif;
    /*Gradiente sacado de webgradients.com*/
    background-color: #DCD9D4;
    background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.50) 0%, rgba(0, 0, 0, 0.50) 100%), radial-gradient(at 50% 0%, rgba(255, 255, 255, 0.10) 0%, rgba(0, 0, 0, 0.50) 50%);
    background-blend-mode: soft-light, screen;
    font-size: 1.6rem;
}

h1,
h2,
h3 {
    margin: 0;
}

h2,
h3 {
    text-align: center;
}

h3 {
    color: var(--secundario);
    font-weight: 400;
    font-size: 3rem;
}

p {
    font-size: 1.8rem;
    line-height: 1.8;
}

.site-header nav {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 0 5%;
}


/*Media query con el enfoque "Mobile first". Lo que sucede acá es que
una vez que se supera el min-width de 768px, se aplica el CSS escrito dentro
del media query*/

@media (min-width:768px) {
    .site-header nav {
        flex-direction: row;
        justify-content: space-between;
        margin: 0 auto;
        padding-left: 4rem;
        padding-right: 4rem;
    }
}

.site-header {
    background-color: white;
}

.site-header nav a {
    color: var(--oscuro);
    font-size: 2.2rem;
    text-decoration: none;
    margin-bottom: 2rem;
}

.site-header nav a:last-of-type {
    margin-bottom: 0;
}

@media (min-width:768px) {
    .site-header nav a {
        margin-bottom: 0;
    }
}

.hero {
    height: 450px;
    background-image: url(../img/hero.jpg);
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
}

.hero::after {
    content: '';
    background-color: rgba(0, 0, 0, .7);
    position: absolute;
    /*Top, left, right, bottom sirven para hacer que la imagen tome todo el espacio disponible*/
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.contenedor-hero {
    /*Este text align reemplaza el flexbox, pero solo para textos*/
    padding: 2rem;
    text-align: center;
    color: white;
    position: relative;
    z-index: 1;
}

.contenedor-hero i {
    font-size: 5rem;
    color: var(--primario);
}

.boton {
    background-color: var(--secundario);
    padding: 1rem 5rem;
    display: inline-block;
    margin-top: 1rem;
    text-decoration: none;
    color: white;
    text-transform: uppercase;
    font-weight: 700;
    font-size: 2.2rem;
    border-radius: 0.5rem;
    border: none;
}

.contenedor {
    max-width: 1200px;
    margin: 0 auto;
    background-color: white;
    padding: 3rem;
    border-radius: 1rem;
    -webkit-box-shadow: 12px 13px 24px -18px rgba(0, 0, 0, 0.75);
    -moz-box-shadow: 12px 13px 24px -18px rgba(0, 0, 0, 0.75);
    box-shadow: 12px 13px 24px -18px rgba(0, 0, 0, 0.75);
    margin: 3rem auto;
}

.servicios {}


/*Esto es para cuando está en pantallas medianas o grandes. La propiedad flex lo que hace es darle una base de tamaño y el -rem deja un espacio extra a la derecha para que haya algo
de separación*/

.contenedor-servicios {
    margin-top: 3rem;
}

@media(min-width:768px) {
    .contenedor-servicios {
        display: flex;
        justify-content: space-between;
    }
    .servicio {
        flex: 0 0 calc(33.3% - 1rem);
    }
}


/*Para centrar los círculos amarillos con los íconos adentro*/

.servicio {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.iconos {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background-color: var(--primario);
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    margin-top: 2rem;
}

.iconos {
    font-size: 3rem;
}

form {
    background-color: var(--gris);
    padding: 2rem;
    border-radius: 1rem;
}

form legend {
    font-size: 2rem;
    color: var(--primario);
    margin: 3rem auto;
}

@media (min-width:768px) {
    form {
        max-width: 800px;
        margin: 3rem auto;
    }
    .contenedor-campos {
        display: flex;
        justify-content: space-between;
        /*Este flex wrap es para que no se pasen los elementos. Es decir, una vez que se pasan, se ponen debajo, en la siguiente fila*/
        flex-wrap: wrap;
    }
    .campo {
        flex: 0 0 calc( 50% - 1rem);
    }
}

.campo {
    display: flex;
    margin-bottom: 2rem;
    align-items: center;
}

.campo label {
    flex: 0 0 90px;
    color: white;
}

.campo input {
    flex: 1;
    height: 4rem;
}

.campo textarea {
    flex: 1;
    height: 6rem;
}

.w-100 {
    flex: 0 0 100%;
}

.enviar {
    display: flex;
    justify-content: flex-end;
}